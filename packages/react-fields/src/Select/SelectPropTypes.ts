import PropTypes from 'prop-types'

export default {
  fieldName: PropTypes.string,
  onChange: PropTypes.func.isRequired,
  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),
  passProps: PropTypes.object,
  errorMessage: PropTypes.any,
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
  description: PropTypes.any,
  placeholder: PropTypes.any,
  multi: PropTypes.bool,
  disabled: PropTypes.bool,
  options: PropTypes.arrayOf(PropTypes.shape({
    value: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired
  })),
  isClearable: PropTypes.bool,
  isSearchable: PropTypes.bool,
  extraOptions: PropTypes.array,
  filter: PropTypes.array,
  icon: PropTypes.string,
  style: PropTypes.object,
  noOptionsMessage: PropTypes.any,
  brandedStyle: PropTypes.object,
  onBrandedSelect: PropTypes.func,
  onInputChange: PropTypes.func,
  inputValue: PropTypes.string,
  components: PropTypes.object,
  onBlur: PropTypes.func,
  closeMenuOnSelect: PropTypes.bool,
  hideSelectedOptions: PropTypes.bool,
  blurInputOnSelect: PropTypes.bool,
  menuListStyle: PropTypes.object,
  containerStyle: PropTypes.object,
  containerClassName: PropTypes.string,
  multiValueStyle: PropTypes.object,
  multiValueContainerStyle: PropTypes.object,
  multiValueLabelStyle: PropTypes.object,
  valueContainerStyle: PropTypes.object,

  isOptional: PropTypes.bool,
  isOptionalLabel: PropTypes.string,
  isRequired: PropTypes.bool,
  isRequiredLabel: PropTypes.string,

  iconLibrary: PropTypes.string,
  iconName: PropTypes.string,
}